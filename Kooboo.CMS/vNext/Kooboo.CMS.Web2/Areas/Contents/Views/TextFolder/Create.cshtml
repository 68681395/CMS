@model Kooboo.CMS.Content.Models.TextFolder
@{
    ViewBag.Title = "New folder".Localize();
    Layout = "~/Views/Shared/Blank.cshtml";
}
@section Panel{
    <ul class="header-panel">
        <li>
            <a data-ajaxform="">
                @Html.IconImage("save") @("Save".Localize())
            </a>
        </li>
        @foreach (var group in Kooboo.CMS.Sites.Extension.UI.TopToolbar.ToolbarButtons.GetToolbarButtons(ViewContext.RequestContext))
        {
            @Html.Partial("_ToolbarGroupButtons", group)
        }
        <li>
            <a href="@ViewContext.RequestContext.GetRequestValue("return")">
                @Html.IconImage("back") @("Cancel".Localize())
            </a>
        </li>
    </ul>
}
<div class="block common-form">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(true)
        <div class="J_Tabs">
            <ul>
                <li><a href="#basicInfo">@("Basic info".Localize())</a></li>
                <li><a href="#permissionSetting">@("Permission Setting".Localize())</a></li>
                <li class="extend"><a href="#relationFolders">@("Relation folders".Localize())</a></li>
                <li class="extend"><a href="#contentManagement">@("Content management".Localize())</a></li>
            </ul>
            <div id="basicInfo">
                <table>
                    <tbody>
                        @Html.EditorFor(m => m.Name, new { HtmlAttributes = new { @class = "medium" } })
                        @Html.EditorFor(m => m.DisplayName, new { HtmlAttributes = new { @class = "medium" } })
                        @Html.EditorFor(m => m.SchemaName, new { HtmlAttributes = new { @class = "medium" } })
                    </tbody>
                </table>
            </div>
            <div id="permissionSetting">
                <table>
                    <tbody>
                        <tr>
                            <th></th>
                            <td>
                                <ul class="form-list vertical">
                                    <li>
                                        <input type="radio" name="EnabledWorkflow" value="False" id="EnabledWorkflow_False" checked="checked" />
                                        <label class="inline" for="EnabledWorkflow_False">
                                            @("Role base".Localize())
                                        </label>
                                    </li>
                                    <li>
                                        <input type="radio" name="EnabledWorkflow" value="True" id="EnabledWorkflow_True" />
                                        <label class="inline" for="EnabledWorkflow_True">
                                            @("Workflow".Localize())
                                        </label>
                                    </li>
                                </ul>
                            </td>
                        </tr>
                        @Html.EditorFor(m => m.WorkflowName, new { HtmlAttributes = new { @class = "medium" } })
                        @Html.EditorFor(m => m.Roles, new { HtmlAttributes = new { @class = "medium" } })
                    </tbody>
                </table>
            </div>
            <div id="relationFolders">
                <table>
                    <tbody>
                        @Html.EditorFor(m => m.Categories, new { HtmlAttributes = new { @class = "medium" } })
                        @Html.EditorFor(m => m.EmbeddedFolders, new { HtmlAttributes = new { @class = "medium" } })
                    </tbody>
                </table>
            </div>
            <div id="contentManagement">
                <table>
                    <tbody>
                        @Html.EditorFor(o => o.Sortable)
                        @Html.EditorFor(m => m.Hidden)
                        @Html.EditorFor(o => o.EnablePaging)
                        @Html.EditorFor(m => m.PageSize, new { HtmlAttributes = new { @class = "medium" } })
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    $(function () {
        $('.J_Tabs').tabs();
        var contentType = $('#SchemaName').change(function () {
            handleContentType($(this));
        });

        function handleContentType(contentType) {
            if (!contentType.val()) {
                $('#EnabledWorkflow_True').hide().next().hide();
                $('.J_Tabs .extend').hide();
            } else {
                $('#EnabledWorkflow_True').show().next().show();
                $('.J_Tabs .extend').show();
            }
        }

        handleContentType(contentType);

        function initPermission(radio) {

            var effect, workflowSetting = $('#WorkflowName'),
            roleSetting = $('#Roles');
            if (radio.filter('[checked]').val() == 'True') {
                workflowSetting.removeAttr('disabled').parents('tr:eq(0)').show(effect);
                roleSetting.parents('tr:eq(0)').hide(effect).find('select').attr('disabled', 'disabled');
            } else {
                roleSetting.parents('tr:eq(0)').show(effect).find('select.select-data-field').removeAttr('disabled');
                workflowSetting.attr('disabled', 'disabled').parents('tr:eq(0)').hide(effect);
            }
        }

        var permissionToggle = $(':radio[name=EnabledWorkflow]').change(function () {
            initPermission(permissionToggle);
        });

        initPermission(permissionToggle);

        function enablePaging(enabled) {
            if (enabled) {
                $('#PageSize').removeAttr('disabled');
            }
            else {
                $('#PageSize').attr('disabled', true);
            }
        }

        var $enablePaging = $('#EnablePaging');
        $enablePaging.change(function () {
            enablePaging($enablePaging.attr("checked"));
        });
        enablePaging($enablePaging.attr("checked"));
    });
</script>
