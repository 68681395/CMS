@model Site

@{
    Stack<Site> parents = new Stack<Site>();
    var parent = Model.Parent.AsActual();
    while (parent != null)
    {
        parents.Push(parent);
        parent = parent.Parent.AsActual();
    }
    var rootSite = parents.Count > 0 ? parents.Peek() : Model;

}
@helper RenderSiteTree(Site site, Site current)
{
    <li @(site == current ? "class=active" : "")>
        @Html.ActionLink(string.IsNullOrEmpty(site.DisplayName) ? site.Name : site.DisplayName, "SiteMap", new { Area = "Sites", controller = "Home", siteName = site.FullName, repositoryName = site.AsActual().Repository })

        <ul>
            @foreach (var child in site.ChildSites())
            {
                @RenderSiteTree(child.AsActual(), current)
            }
        </ul>
    </li>
}

<div class="switcher active">
    <span class="current">
        <span>@(string.IsNullOrEmpty(Site.Current.DisplayName) ? Site.Current.Name : Site.Current.DisplayName)</span>
        @Html.IconImage("caret-toggle")
    </span>
    <ul class="list">
        @*@if (parents.Count > 0)
            {
                @RenderParent(parents)
            }
            else
            {
                @RenderCurrent(Model)
            }*@
        @RenderSiteTree(rootSite, Model)
    </ul>

</div>

